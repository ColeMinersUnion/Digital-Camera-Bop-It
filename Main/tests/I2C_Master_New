#include <Wire.h>

int counter = 0;
const int threshold = 1000;
const int MPU_ADDR = 0x68; // MPU6050 I2C address
int16_t ax, ay, az;
int16_t last_ax = 0, last_ay = 0, last_az = 0;

void setup() {
  Wire.begin(); // I2C as master
  Serial.begin(9600);

  Wire.beginTransmission(MPU_ADDR);
  Wire.write(0x6B); 
  Wire.write(0);   
  Wire.endTransmission(true);
}

void readAccelerometer() {
  Wire.beginTransmission(MPU_ADDR);
  Wire.write(0x3B); // Starting register for accelerometer readings
  Wire.endTransmission(false);
  Wire.requestFrom(MPU_ADDR, 6, true); // Request 6 bytes

  ax = (Wire.read() << 8 | Wire.read()) / 16384.0; // X-axis
  ay = (Wire.read() << 8 | Wire.read()) / 16384.0; // Y-axis
  az = (Wire.read() << 8 | Wire.read()) / 16384.0; // Z-axis
}

void loop() {

  readAccelerometer();

  int dx = abs(ax - last_ax);
  int dy = abs(ay - last_ay);
  int dz = abs(az - last_az);

  if (dx > threshold || dy > threshold || dz > threshold) {
    counter++;
    
    // Update last values
    last_ax = ax;
    last_ay = ay;
    last_az = az;

    delay(500);
  }

  Wire.beginTransmission(0x08); // Match slave address
  Wire.write(counter); // Send number
  Wire.endTransmission();
}


